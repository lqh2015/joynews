def readPropertyFile(relativePath) {    StringReader appReader = new StringReader(file("${projectDir.getAbsolutePath()}${relativePath}").getText("utf-8"))    Properties properties = new Properties()    properties.load(appReader)    return properties}apply plugin: 'com.android.application'android {    compileSdkVersion 23    buildToolsVersion '23.0.1'    defaultConfig {        applicationId "com.android.world.news"        minSdkVersion 14        targetSdkVersion 23        versionCode 900        versionName "9.00"    }    compileOptions {        sourceCompatibility JavaVersion.VERSION_1_7        targetCompatibility JavaVersion.VERSION_1_7    }    lintOptions {        checkReleaseBuilds false        abortOnError false    }    signingConfigs {        myConfig {            Properties properties = readPropertyFile("/configs/signature.txt")            storeFile file(properties.getProperty("storeFile"))            storePassword properties.getProperty("storePassword")            keyAlias properties.getProperty("keyAlias")            keyPassword properties.getProperty("keyPassword")        }    }    buildTypes {        debug {            signingConfig signingConfigs.myConfig            minifyEnabled false            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'        }        release {            signingConfig signingConfigs.myConfig            minifyEnabled true            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'        }    }    sourceSets {        main {}        rom {}    }    productFlavors {//        google {//            versionName "3.00"//        }//        rom {//            versionName "5.00"//        }    }    applicationVariants.all { variant ->        variant.outputs.each { output ->            // Change all output apk files' name, append app version name into file name            def oldSuffix = "${variant.buildType.name}.apk"            def newSuffix = "${variant.versionCode}-${variant.versionName}-${oldSuffix}"            output.outputFile = new File(output.outputFile.parentFile,                    "9999_"+output.outputFile.name.replace(oldSuffix, newSuffix));        }    }}repositories {    maven { url "http://dl.bintray.com/populov/maven" }    mavenCentral()}dependencies {    compile 'com.android.support:support-v4:23.4.0'    compile 'com.android.support:recyclerview-v7:23.4.0'    compile 'com.android.support:cardview-v7:23.4.0'    compile 'com.commit451:PhotoView:1.2.4'    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'    compile 'com.squareup.okhttp:okhttp:2.7.5'    compile 'de.greenrobot:greendao:2.1.0'    compile 'de.greenrobot:eventbus:2.4.0'    compile 'com.alibaba:fastjson:1.2.8'    compile 'com.pnikosis:materialish-progress:1.3'    compile 'com.viewpagerindicator:library:2.4.1@aar'    //    compile fileTree(dir: 'libs', include: '*.jar')//    compile project(':updateself')}